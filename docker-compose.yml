services:
  db:
    container_name: postgres
    image: postgres:15-alpine
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - PG_DATA=/var/lib/postgresql/data
    networks:
      - cab_aggregator
    volumes:
      - ./data:/var/lib/postgresql/data
      - ./postgresql.conf:/etc/postgres/sql/postgresql.conf
  
  zookeeper:
    image: zookeeper:3.7.0
    container_name: zookeeper
    networks:
      - cab_aggregator
    restart: "no"
    ports:
      - "2181:2181"

  kafka:
    image: obsidiandynamics/kafka
    container_name: kafka
    restart: "no"
    ports:
      - "9092:9092"
    environment:
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: DOCKER_INTERNAL:PLAINTEXT,DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_LISTENERS: DOCKER_INTERNAL://:29092,DOCKER_EXTERNAL://:9092
      KAFKA_ADVERTISED_LISTENERS: DOCKER_INTERNAL://kafka:29092,DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - cab_aggregator
    depends_on:
      - zookeeper

  kafka-exporter:
    image: danielqsj/kafka-exporter:v1.7.0
    container_name: kafka-exporter
    command: [ "--kafka.server=kafka:29092" ]
    ports:
      - '9308:9308'
    networks:
      - cab_aggregator
    depends_on:
      - kafka

  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: kafdrop
    restart: "no"
    ports:
      - "9000:9000"
    networks:
      - cab_aggregator
    environment:
      KAFKA_BROKERCONNECT: "kafka:29092"
    depends_on:
      - "kafka"

  passenger-service:
    image: passenger-service
    container_name: passenger-service
    ports:
      - '9001:9001'
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/passengers
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=Raznie71593)
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-service:8761/eureka
      - MANAGEMENT_ZIPKIN_TRACING_ENDPOINT=http://zipkin:9411/api/v2/spans
      - SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK_SET_URI=http://keycloak:8181/realms/cab-aggregator-realm/protocol/openid-connect/certs
    networks:
      - cab_aggregator
    depends_on:
      - eureka-service
      - db
  driver-service:
    image: driver-service
    container_name: driver-service
    ports:
      - '9002:9002'
    networks:
      - cab_aggregator
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/drivers
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=Raznie71593)
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-service:8761/eureka
      - MANAGEMENT_ZIPKIN_TRACING_ENDPOINT=http://zipkin:9411/api/v2/spans
      - SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK_SET_URI=http://keycloak:8181/realms/cab-aggregator-realm/protocol/openid-connect/certs
    depends_on:
      - eureka-service
      - db
      - kafka

  ride-service:
    image: ride-service
    container_name: ride-service
    ports:
      - '9003:9003'
    networks:
      - cab_aggregator
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/rides
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=Raznie71593)
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-service:8761/eureka
      - MANAGEMENT_ZIPKIN_TRACING_ENDPOINT=http://zipkin:9411/api/v2/spans
      - SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK_SET_URI=http://keycloak:8181/realms/cab-aggregator-realm/protocol/openid-connect/certs
    depends_on:
      - eureka-service
      - db
      - kafka

  payment-service:
    image: payment-service
    container_name: payment-service
    ports:
      - '9004:9004'
    networks:
      - cab_aggregator
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/payments
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=Raznie71593)
      - STRIPE_KEY_PUBLIC=pk_test_51OMpWVHPfaCQO7pdVwsyKlRJaNipKQbxf0bXbs1vU65CdGsZpJmX53wlIaEBlvYxXOs6jqeJ345sr1VI4DwK3zt7008DaWgELG
      - STRIPE_KEY_SECRET=sk_test_51OMpWVHPfaCQO7pdxLmDbGHksxZbtTtVHIx2uKAmdfbMf9jsKqgfeXLC69xqJ5dF99XLKlPNQgTRugmZPr8IRsmm00sDW2Hpyt
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-service:8761/eureka
      - MANAGEMENT_ZIPKIN_TRACING_ENDPOINT=http://zipkin:9411/api/v2/spans
      - SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI=http://keycloak:8181/realms/cab-aggregator-realm
    depends_on:
      - eureka-service
      - db

  eureka-service:
    image: eureka-service
    container_name: eureka-service
    networks:
      - cab_aggregator
    ports:
      - '8761:8761'

  gateway-service:
    image: gateway-service
    container_name: gateway-service
    networks:
      - cab_aggregator
    environment:
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-service:8761/eureka
      - MANAGEMENT_ZIPKIN_TRACING_ENDPOINT=http://zipkin:9411/api/v2/spans
      - SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_KEYCLOAK_CLIENT_SECRET=XgRwNJnuWByQVSRBG6IpPn2QjlBUK7Dd
      - SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KEYCLOAK_ISSUER_URI=http://keycloak:8181/realms/cab-aggregator-realm
    depends_on:
      - eureka-service
    ports:
      - '8080:8080'

  prometheus:
    image: prom/prometheus:v2.47.0
    container_name: prometheus
    ports:
      - '9090:9090'
    networks:
      - cab_aggregator
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
  grafana:
    image: grafana/grafana:10.1.5
    container_name: grafana
    ports:
      - '3000:3000'
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=password
    networks:
      - cab_aggregator
    volumes:
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
    depends_on:
      - prometheus
      - db

  elasticsearch:
    image: elasticsearch:8.12.0
    container_name: elasticsearch
    environment:
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "discovery.type=single-node"
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - cab_aggregator

  kibana:
    image: kibana:8.12.0
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
    networks:
      - cab_aggregator

  logstash:
    image: logstash:8.12.0
    container_name: logstash
    volumes:
      - ./monitoring/logstash/pipeline:/usr/share/logstash/pipeline:ro
    ports:
      - "5000:5000"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - cab_aggregator
  zipkin:
    image: openzipkin/zipkin:2.27
    container_name: zipkin
    networks:
      - cab_aggregator
    ports:
      - '9411:9411'
  keycloak:
    image: quay.io/keycloak/keycloak:18.0.2
    container_name: keycloak
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
    volumes:
      - ./keycloak:/opt/keycloak/data/import
    ports:
      - "8181:8181"
    networks:
      - cab_aggregator
    command:
      - start-dev
networks:
  cab_aggregator:
    driver: bridge

volumes:
  elasticsearch_data:
    driver: local